"use strict";
/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.errorFromName = exports.errorFromCode = exports.InvalidTokenMintError = exports.InvalidDustBurnError = exports.NonZeroTokenBalanceError = exports.InvalidCloseAuthorityError = exports.InvalidVaultOwnerError = exports.InvalidTimeAuthorityError = exports.InsufficientVaultBalanceError = exports.InsufficientTimeElapsedError = exports.InvalidVaultAccountError = exports.InvalidTimeLockDurationError = exports.InvalidTimeLockStateError = void 0;
var createErrorFromCodeLookup = new Map();
var createErrorFromNameLookup = new Map();
/**
 * InvalidTimeLockState: 'Invalid timelock state for this instruction'
 *
 * @category Errors
 * @category generated
 */
var InvalidTimeLockStateError = /** @class */ (function (_super) {
    __extends(InvalidTimeLockStateError, _super);
    function InvalidTimeLockStateError() {
        var _this = _super.call(this, 'Invalid timelock state for this instruction') || this;
        _this.code = 0x1770;
        _this.name = 'InvalidTimeLockState';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidTimeLockStateError);
        }
        return _this;
    }
    return InvalidTimeLockStateError;
}(Error));
exports.InvalidTimeLockStateError = InvalidTimeLockStateError;
createErrorFromCodeLookup.set(0x1770, function () { return new InvalidTimeLockStateError(); });
createErrorFromNameLookup.set('InvalidTimeLockState', function () { return new InvalidTimeLockStateError(); });
/**
 * InvalidTimeLockDuration: 'Invalid timelock duration provided'
 *
 * @category Errors
 * @category generated
 */
var InvalidTimeLockDurationError = /** @class */ (function (_super) {
    __extends(InvalidTimeLockDurationError, _super);
    function InvalidTimeLockDurationError() {
        var _this = _super.call(this, 'Invalid timelock duration provided') || this;
        _this.code = 0x1771;
        _this.name = 'InvalidTimeLockDuration';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidTimeLockDurationError);
        }
        return _this;
    }
    return InvalidTimeLockDurationError;
}(Error));
exports.InvalidTimeLockDurationError = InvalidTimeLockDurationError;
createErrorFromCodeLookup.set(0x1771, function () { return new InvalidTimeLockDurationError(); });
createErrorFromNameLookup.set('InvalidTimeLockDuration', function () { return new InvalidTimeLockDurationError(); });
/**
 * InvalidVaultAccount: 'Invalid vault account'
 *
 * @category Errors
 * @category generated
 */
var InvalidVaultAccountError = /** @class */ (function (_super) {
    __extends(InvalidVaultAccountError, _super);
    function InvalidVaultAccountError() {
        var _this = _super.call(this, 'Invalid vault account') || this;
        _this.code = 0x1772;
        _this.name = 'InvalidVaultAccount';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidVaultAccountError);
        }
        return _this;
    }
    return InvalidVaultAccountError;
}(Error));
exports.InvalidVaultAccountError = InvalidVaultAccountError;
createErrorFromCodeLookup.set(0x1772, function () { return new InvalidVaultAccountError(); });
createErrorFromNameLookup.set('InvalidVaultAccount', function () { return new InvalidVaultAccountError(); });
/**
 * InsufficientTimeElapsed: 'The timelock period has not yet been reached'
 *
 * @category Errors
 * @category generated
 */
var InsufficientTimeElapsedError = /** @class */ (function (_super) {
    __extends(InsufficientTimeElapsedError, _super);
    function InsufficientTimeElapsedError() {
        var _this = _super.call(this, 'The timelock period has not yet been reached') || this;
        _this.code = 0x1773;
        _this.name = 'InsufficientTimeElapsed';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InsufficientTimeElapsedError);
        }
        return _this;
    }
    return InsufficientTimeElapsedError;
}(Error));
exports.InsufficientTimeElapsedError = InsufficientTimeElapsedError;
createErrorFromCodeLookup.set(0x1773, function () { return new InsufficientTimeElapsedError(); });
createErrorFromNameLookup.set('InsufficientTimeElapsed', function () { return new InsufficientTimeElapsedError(); });
/**
 * InsufficientVaultBalance: 'Insufficient vault funds'
 *
 * @category Errors
 * @category generated
 */
var InsufficientVaultBalanceError = /** @class */ (function (_super) {
    __extends(InsufficientVaultBalanceError, _super);
    function InsufficientVaultBalanceError() {
        var _this = _super.call(this, 'Insufficient vault funds') || this;
        _this.code = 0x1774;
        _this.name = 'InsufficientVaultBalance';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InsufficientVaultBalanceError);
        }
        return _this;
    }
    return InsufficientVaultBalanceError;
}(Error));
exports.InsufficientVaultBalanceError = InsufficientVaultBalanceError;
createErrorFromCodeLookup.set(0x1774, function () { return new InsufficientVaultBalanceError(); });
createErrorFromNameLookup.set('InsufficientVaultBalance', function () { return new InsufficientVaultBalanceError(); });
/**
 * InvalidTimeAuthority: 'Invalid time authority'
 *
 * @category Errors
 * @category generated
 */
var InvalidTimeAuthorityError = /** @class */ (function (_super) {
    __extends(InvalidTimeAuthorityError, _super);
    function InvalidTimeAuthorityError() {
        var _this = _super.call(this, 'Invalid time authority') || this;
        _this.code = 0x1775;
        _this.name = 'InvalidTimeAuthority';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidTimeAuthorityError);
        }
        return _this;
    }
    return InvalidTimeAuthorityError;
}(Error));
exports.InvalidTimeAuthorityError = InvalidTimeAuthorityError;
createErrorFromCodeLookup.set(0x1775, function () { return new InvalidTimeAuthorityError(); });
createErrorFromNameLookup.set('InvalidTimeAuthority', function () { return new InvalidTimeAuthorityError(); });
/**
 * InvalidVaultOwner: 'Invalid vault owner'
 *
 * @category Errors
 * @category generated
 */
var InvalidVaultOwnerError = /** @class */ (function (_super) {
    __extends(InvalidVaultOwnerError, _super);
    function InvalidVaultOwnerError() {
        var _this = _super.call(this, 'Invalid vault owner') || this;
        _this.code = 0x1776;
        _this.name = 'InvalidVaultOwner';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidVaultOwnerError);
        }
        return _this;
    }
    return InvalidVaultOwnerError;
}(Error));
exports.InvalidVaultOwnerError = InvalidVaultOwnerError;
createErrorFromCodeLookup.set(0x1776, function () { return new InvalidVaultOwnerError(); });
createErrorFromNameLookup.set('InvalidVaultOwner', function () { return new InvalidVaultOwnerError(); });
/**
 * InvalidCloseAuthority: 'Invalid close authority'
 *
 * @category Errors
 * @category generated
 */
var InvalidCloseAuthorityError = /** @class */ (function (_super) {
    __extends(InvalidCloseAuthorityError, _super);
    function InvalidCloseAuthorityError() {
        var _this = _super.call(this, 'Invalid close authority') || this;
        _this.code = 0x1777;
        _this.name = 'InvalidCloseAuthority';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidCloseAuthorityError);
        }
        return _this;
    }
    return InvalidCloseAuthorityError;
}(Error));
exports.InvalidCloseAuthorityError = InvalidCloseAuthorityError;
createErrorFromCodeLookup.set(0x1777, function () { return new InvalidCloseAuthorityError(); });
createErrorFromNameLookup.set('InvalidCloseAuthority', function () { return new InvalidCloseAuthorityError(); });
/**
 * NonZeroTokenBalance: 'Invalid token balance. Token balance must be zero.'
 *
 * @category Errors
 * @category generated
 */
var NonZeroTokenBalanceError = /** @class */ (function (_super) {
    __extends(NonZeroTokenBalanceError, _super);
    function NonZeroTokenBalanceError() {
        var _this = _super.call(this, 'Invalid token balance. Token balance must be zero.') || this;
        _this.code = 0x1778;
        _this.name = 'NonZeroTokenBalance';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, NonZeroTokenBalanceError);
        }
        return _this;
    }
    return NonZeroTokenBalanceError;
}(Error));
exports.NonZeroTokenBalanceError = NonZeroTokenBalanceError;
createErrorFromCodeLookup.set(0x1778, function () { return new NonZeroTokenBalanceError(); });
createErrorFromNameLookup.set('NonZeroTokenBalance', function () { return new NonZeroTokenBalanceError(); });
/**
 * InvalidDustBurn: 'Invalid dust burn.'
 *
 * @category Errors
 * @category generated
 */
var InvalidDustBurnError = /** @class */ (function (_super) {
    __extends(InvalidDustBurnError, _super);
    function InvalidDustBurnError() {
        var _this = _super.call(this, 'Invalid dust burn.') || this;
        _this.code = 0x1779;
        _this.name = 'InvalidDustBurn';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidDustBurnError);
        }
        return _this;
    }
    return InvalidDustBurnError;
}(Error));
exports.InvalidDustBurnError = InvalidDustBurnError;
createErrorFromCodeLookup.set(0x1779, function () { return new InvalidDustBurnError(); });
createErrorFromNameLookup.set('InvalidDustBurn', function () { return new InvalidDustBurnError(); });
/**
 * InvalidTokenMint: 'Invalid token mint.'
 *
 * @category Errors
 * @category generated
 */
var InvalidTokenMintError = /** @class */ (function (_super) {
    __extends(InvalidTokenMintError, _super);
    function InvalidTokenMintError() {
        var _this = _super.call(this, 'Invalid token mint.') || this;
        _this.code = 0x177a;
        _this.name = 'InvalidTokenMint';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidTokenMintError);
        }
        return _this;
    }
    return InvalidTokenMintError;
}(Error));
exports.InvalidTokenMintError = InvalidTokenMintError;
createErrorFromCodeLookup.set(0x177a, function () { return new InvalidTokenMintError(); });
createErrorFromNameLookup.set('InvalidTokenMint', function () { return new InvalidTokenMintError(); });
/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
function errorFromCode(code) {
    var createError = createErrorFromCodeLookup.get(code);
    return createError != null ? createError() : null;
}
exports.errorFromCode = errorFromCode;
/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
function errorFromName(name) {
    var createError = createErrorFromNameLookup.get(name);
    return createError != null ? createError() : null;
}
exports.errorFromName = errorFromName;
