"use strict";
/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.errorFromName = exports.errorFromCode = exports.InvalidProofError = exports.InvalidProofSizeError = exports.ProofNotVerifiedError = exports.ProofAlreadyVerifiedError = exports.InvalidMerkleTreeDepthError = exports.MerkleTreeFullError = exports.InvalidVaultOwnerError = exports.InvalidAuthorityError = exports.InsufficientVaultBalanceError = exports.InvalidVaultAccountError = exports.InvalidRecentRootError = exports.InvalidCommitmentStateError = exports.InvalidPoolStateError = void 0;
var createErrorFromCodeLookup = new Map();
var createErrorFromNameLookup = new Map();
/**
 * InvalidPoolState: 'Invalid pool state for this instruction'
 *
 * @category Errors
 * @category generated
 */
var InvalidPoolStateError = /** @class */ (function (_super) {
    __extends(InvalidPoolStateError, _super);
    function InvalidPoolStateError() {
        var _this = _super.call(this, 'Invalid pool state for this instruction') || this;
        _this.code = 0x1770;
        _this.name = 'InvalidPoolState';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidPoolStateError);
        }
        return _this;
    }
    return InvalidPoolStateError;
}(Error));
exports.InvalidPoolStateError = InvalidPoolStateError;
createErrorFromCodeLookup.set(0x1770, function () { return new InvalidPoolStateError(); });
createErrorFromNameLookup.set('InvalidPoolState', function () { return new InvalidPoolStateError(); });
/**
 * InvalidCommitmentState: 'Invalid commitment state for this instruction'
 *
 * @category Errors
 * @category generated
 */
var InvalidCommitmentStateError = /** @class */ (function (_super) {
    __extends(InvalidCommitmentStateError, _super);
    function InvalidCommitmentStateError() {
        var _this = _super.call(this, 'Invalid commitment state for this instruction') || this;
        _this.code = 0x1771;
        _this.name = 'InvalidCommitmentState';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidCommitmentStateError);
        }
        return _this;
    }
    return InvalidCommitmentStateError;
}(Error));
exports.InvalidCommitmentStateError = InvalidCommitmentStateError;
createErrorFromCodeLookup.set(0x1771, function () { return new InvalidCommitmentStateError(); });
createErrorFromNameLookup.set('InvalidCommitmentState', function () { return new InvalidCommitmentStateError(); });
/**
 * InvalidRecentRoot: 'Invalid recent root value'
 *
 * @category Errors
 * @category generated
 */
var InvalidRecentRootError = /** @class */ (function (_super) {
    __extends(InvalidRecentRootError, _super);
    function InvalidRecentRootError() {
        var _this = _super.call(this, 'Invalid recent root value') || this;
        _this.code = 0x1772;
        _this.name = 'InvalidRecentRoot';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidRecentRootError);
        }
        return _this;
    }
    return InvalidRecentRootError;
}(Error));
exports.InvalidRecentRootError = InvalidRecentRootError;
createErrorFromCodeLookup.set(0x1772, function () { return new InvalidRecentRootError(); });
createErrorFromNameLookup.set('InvalidRecentRoot', function () { return new InvalidRecentRootError(); });
/**
 * InvalidVaultAccount: 'Invalid token account'
 *
 * @category Errors
 * @category generated
 */
var InvalidVaultAccountError = /** @class */ (function (_super) {
    __extends(InvalidVaultAccountError, _super);
    function InvalidVaultAccountError() {
        var _this = _super.call(this, 'Invalid token account') || this;
        _this.code = 0x1773;
        _this.name = 'InvalidVaultAccount';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidVaultAccountError);
        }
        return _this;
    }
    return InvalidVaultAccountError;
}(Error));
exports.InvalidVaultAccountError = InvalidVaultAccountError;
createErrorFromCodeLookup.set(0x1773, function () { return new InvalidVaultAccountError(); });
createErrorFromNameLookup.set('InvalidVaultAccount', function () { return new InvalidVaultAccountError(); });
/**
 * InsufficientVaultBalance: 'Insufficient vault funds'
 *
 * @category Errors
 * @category generated
 */
var InsufficientVaultBalanceError = /** @class */ (function (_super) {
    __extends(InsufficientVaultBalanceError, _super);
    function InsufficientVaultBalanceError() {
        var _this = _super.call(this, 'Insufficient vault funds') || this;
        _this.code = 0x1774;
        _this.name = 'InsufficientVaultBalance';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InsufficientVaultBalanceError);
        }
        return _this;
    }
    return InsufficientVaultBalanceError;
}(Error));
exports.InsufficientVaultBalanceError = InsufficientVaultBalanceError;
createErrorFromCodeLookup.set(0x1774, function () { return new InsufficientVaultBalanceError(); });
createErrorFromNameLookup.set('InsufficientVaultBalance', function () { return new InsufficientVaultBalanceError(); });
/**
 * InvalidAuthority: 'Invalid authority'
 *
 * @category Errors
 * @category generated
 */
var InvalidAuthorityError = /** @class */ (function (_super) {
    __extends(InvalidAuthorityError, _super);
    function InvalidAuthorityError() {
        var _this = _super.call(this, 'Invalid authority') || this;
        _this.code = 0x1775;
        _this.name = 'InvalidAuthority';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidAuthorityError);
        }
        return _this;
    }
    return InvalidAuthorityError;
}(Error));
exports.InvalidAuthorityError = InvalidAuthorityError;
createErrorFromCodeLookup.set(0x1775, function () { return new InvalidAuthorityError(); });
createErrorFromNameLookup.set('InvalidAuthority', function () { return new InvalidAuthorityError(); });
/**
 * InvalidVaultOwner: 'Invalid vault owner'
 *
 * @category Errors
 * @category generated
 */
var InvalidVaultOwnerError = /** @class */ (function (_super) {
    __extends(InvalidVaultOwnerError, _super);
    function InvalidVaultOwnerError() {
        var _this = _super.call(this, 'Invalid vault owner') || this;
        _this.code = 0x1776;
        _this.name = 'InvalidVaultOwner';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidVaultOwnerError);
        }
        return _this;
    }
    return InvalidVaultOwnerError;
}(Error));
exports.InvalidVaultOwnerError = InvalidVaultOwnerError;
createErrorFromCodeLookup.set(0x1776, function () { return new InvalidVaultOwnerError(); });
createErrorFromNameLookup.set('InvalidVaultOwner', function () { return new InvalidVaultOwnerError(); });
/**
 * MerkleTreeFull: 'Merkle tree full'
 *
 * @category Errors
 * @category generated
 */
var MerkleTreeFullError = /** @class */ (function (_super) {
    __extends(MerkleTreeFullError, _super);
    function MerkleTreeFullError() {
        var _this = _super.call(this, 'Merkle tree full') || this;
        _this.code = 0x1777;
        _this.name = 'MerkleTreeFull';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, MerkleTreeFullError);
        }
        return _this;
    }
    return MerkleTreeFullError;
}(Error));
exports.MerkleTreeFullError = MerkleTreeFullError;
createErrorFromCodeLookup.set(0x1777, function () { return new MerkleTreeFullError(); });
createErrorFromNameLookup.set('MerkleTreeFull', function () { return new MerkleTreeFullError(); });
/**
 * InvalidMerkleTreeDepth: 'Invalid merkle tree depth'
 *
 * @category Errors
 * @category generated
 */
var InvalidMerkleTreeDepthError = /** @class */ (function (_super) {
    __extends(InvalidMerkleTreeDepthError, _super);
    function InvalidMerkleTreeDepthError() {
        var _this = _super.call(this, 'Invalid merkle tree depth') || this;
        _this.code = 0x1778;
        _this.name = 'InvalidMerkleTreeDepth';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidMerkleTreeDepthError);
        }
        return _this;
    }
    return InvalidMerkleTreeDepthError;
}(Error));
exports.InvalidMerkleTreeDepthError = InvalidMerkleTreeDepthError;
createErrorFromCodeLookup.set(0x1778, function () { return new InvalidMerkleTreeDepthError(); });
createErrorFromNameLookup.set('InvalidMerkleTreeDepth', function () { return new InvalidMerkleTreeDepthError(); });
/**
 * ProofAlreadyVerified: 'Proof already verified'
 *
 * @category Errors
 * @category generated
 */
var ProofAlreadyVerifiedError = /** @class */ (function (_super) {
    __extends(ProofAlreadyVerifiedError, _super);
    function ProofAlreadyVerifiedError() {
        var _this = _super.call(this, 'Proof already verified') || this;
        _this.code = 0x1779;
        _this.name = 'ProofAlreadyVerified';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, ProofAlreadyVerifiedError);
        }
        return _this;
    }
    return ProofAlreadyVerifiedError;
}(Error));
exports.ProofAlreadyVerifiedError = ProofAlreadyVerifiedError;
createErrorFromCodeLookup.set(0x1779, function () { return new ProofAlreadyVerifiedError(); });
createErrorFromNameLookup.set('ProofAlreadyVerified', function () { return new ProofAlreadyVerifiedError(); });
/**
 * ProofNotVerified: 'Proof not verified'
 *
 * @category Errors
 * @category generated
 */
var ProofNotVerifiedError = /** @class */ (function (_super) {
    __extends(ProofNotVerifiedError, _super);
    function ProofNotVerifiedError() {
        var _this = _super.call(this, 'Proof not verified') || this;
        _this.code = 0x177a;
        _this.name = 'ProofNotVerified';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, ProofNotVerifiedError);
        }
        return _this;
    }
    return ProofNotVerifiedError;
}(Error));
exports.ProofNotVerifiedError = ProofNotVerifiedError;
createErrorFromCodeLookup.set(0x177a, function () { return new ProofNotVerifiedError(); });
createErrorFromNameLookup.set('ProofNotVerified', function () { return new ProofNotVerifiedError(); });
/**
 * InvalidProofSize: 'Invalid proof size'
 *
 * @category Errors
 * @category generated
 */
var InvalidProofSizeError = /** @class */ (function (_super) {
    __extends(InvalidProofSizeError, _super);
    function InvalidProofSizeError() {
        var _this = _super.call(this, 'Invalid proof size') || this;
        _this.code = 0x177b;
        _this.name = 'InvalidProofSize';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidProofSizeError);
        }
        return _this;
    }
    return InvalidProofSizeError;
}(Error));
exports.InvalidProofSizeError = InvalidProofSizeError;
createErrorFromCodeLookup.set(0x177b, function () { return new InvalidProofSizeError(); });
createErrorFromNameLookup.set('InvalidProofSize', function () { return new InvalidProofSizeError(); });
/**
 * InvalidProof: 'Invalid proof'
 *
 * @category Errors
 * @category generated
 */
var InvalidProofError = /** @class */ (function (_super) {
    __extends(InvalidProofError, _super);
    function InvalidProofError() {
        var _this = _super.call(this, 'Invalid proof') || this;
        _this.code = 0x177c;
        _this.name = 'InvalidProof';
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, InvalidProofError);
        }
        return _this;
    }
    return InvalidProofError;
}(Error));
exports.InvalidProofError = InvalidProofError;
createErrorFromCodeLookup.set(0x177c, function () { return new InvalidProofError(); });
createErrorFromNameLookup.set('InvalidProof', function () { return new InvalidProofError(); });
/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
function errorFromCode(code) {
    var createError = createErrorFromCodeLookup.get(code);
    return createError != null ? createError() : null;
}
exports.errorFromCode = errorFromCode;
/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
function errorFromName(name) {
    var createError = createErrorFromNameLookup.get(name);
    return createError != null ? createError() : null;
}
exports.errorFromName = errorFromName;
